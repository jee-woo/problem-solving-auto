# 최후에 남을 수 있는 풍선의 조건: 최후에 남는 풍선은 양쪽 끝에 있는 풍선이거나,
# 자신을 기준으로 왼쪽의 모든 풍선과 오른쪽의 모든 풍선 중 둘 중 하나만이라도 자신보다 큰 풍선이 없는 경우입니다.

def solution(a):
    answer = 2
    n = len(a)
    MAX = 1_000_000_001
    
    left_min = [MAX] * n
    right_min = [MAX] * n
    
    left_min[0] = a[0]
    right_min[-1] = a[-1]
    
    for i in range(1, n-1):
        left_min[i] = min(left_min[i-1], a[i])
    
    for i in range(n-2, 0, -1):
        right_min[i] = min(right_min[i+1], a[i])
    
    for i in range(1, n-1):
        if a[i] < left_min[i-1] or a[i] < right_min[i+1] :
            answer += 1
    
    return answer

"""
a의 길이는 1 이상 1,000,000 이하

인접한 두 풍선 중에서 번호가 더 작은 풍선을 터트리는 행위는 최대 1번만 할 수 있습니다.
위에 서술된 규칙대로 풍선들을 1개만 남을 때까지 터트렸을 때 최후까지 남기는 것이 가능한 풍선들의 개수를 return


a[i]번째 풍선이 최후까지 남겨지는 것이 가능한가??

[-16,27,65,-2,58,-92,-71,-68,-61,-33]

-92,-71,-68,-61,-33
-16
27,65,-2,58

[-16,27,65,-2,58,-92,-71,-68,-61,-33]

-16,-2,-92,-71,-68,-61,-33
27
65,58

-16,-2,-92,-71,-68,-61,-33,27
65
58

-16,-92,-71,-68,-61,-33
-2
27,65,58



[(58),-92]


1,2,3,4,5

1,2,3
4
5

"""